name: 建置與發布

on:
  push:
    tags:
      - 'v*'  # 當推送版本標籤時觸發

permissions:
  contents: write  # 添加全域權限設置

jobs:
  build:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf-8  # 設定 Python IO 編碼
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: develop  # 從 develop 分支建置
    
    - name: 設定 Python 環境
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: 安裝相依套件
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: 更新版本資訊
      run: |
        $version = "${{ github.ref }}".Replace('refs/tags/v', '')
        $json = Get-Content version.json | ConvertFrom-Json
        $json.launcher_version = $version
        $json.last_updated = (Get-Date).ToString("yyyy-MM-dd")
        $json | ConvertTo-Json | Set-Content version.json
    
    - name: 使用 PyInstaller 建置
      shell: cmd
      run: |
        chcp 65001
        python -X utf8 build.py
    
    - name: 建立發布版本
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/kcptube_launcher.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-main:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: 建立工作目錄
      run: |
        mkdir -p workspace/temp/{conf,kcptube}
        
    - uses: actions/checkout@v4
      with:
        ref: develop
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # 獲取完整歷史記錄
        path: workspace/develop
    
    - name: 顯示目錄結構（develop）
      working-directory: workspace/develop
      run: |
        echo "=== Develop 分支目錄結構 ==="
        ls -la
        echo "=== kcptube 目錄結構 ==="
        ls -la kcptube/
        echo "=== conf 目錄結構 ==="
        ls -la conf/
    
    - name: 準備檔案
      run: |
        echo "複製檔案到暫存目錄..."
        cp -v workspace/develop/version.json workspace/temp/ || echo "警告: 無法複製 version.json"
        cp -v workspace/develop/conf/*.conf workspace/temp/conf/ || echo "警告: 無法複製設定檔"
        cp -rv workspace/develop/kcptube/. workspace/temp/kcptube/ || echo "警告: 無法複製 kcptube 檔案"
        
        echo "顯示暫存目錄結構..."
        ls -la workspace/temp/
        ls -la workspace/temp/conf/
        ls -la workspace/temp/kcptube/
    
    - uses: actions/checkout@v4
      with:
        ref: main
        clean: true
        token: ${{ secrets.GITHUB_TOKEN }}
        path: workspace/main
    
    - name: 建立目錄結構
      working-directory: workspace/main
      run: |
        echo "建立基本目錄結構..."
        mkdir -p conf kcptube
        
        echo "準備版本資訊..."
        version="${GITHUB_REF#refs/tags/v}"
        echo "{\"launcher_version\": \"$version\", \"kcptube_version\": \"20240602\", \"last_updated\": \"$(date +%Y-%m-%d)\"}" > version.json
        
        echo "讀取 KCPTube 版本..."
        kcptube_version=$(jq -r '.kcptube_version' version.json)
        echo "KCPTube 版本: $kcptube_version"
        
        echo "建立 KCPTube 版本目錄..."
        mkdir -p "kcptube/$kcptube_version"
    
    - name: 複製檔案
      working-directory: workspace/main
      run: |
        echo "複製檔案到 main 分支..."
        
        echo "複製版本資訊..."
        cp -v ../temp/version.json ./ || echo "警告: 無法複製 version.json"
        
        echo "清空舊的設定檔..."
        rm -rf conf/*
        
        echo "複製新的設定檔..."
        cp -v ../temp/conf/*.conf conf/ || echo "警告: 無法複製設定檔"
        
        echo "複製 KCPTube 檔案..."
        cp -rv ../temp/kcptube/. kcptube/ || echo "警告: 無法複製 kcptube 檔案"
        
        echo "顯示最終目錄結構..."
        ls -la
        ls -la conf/
        ls -la kcptube/
    
    - name: 提交並推送變更
      working-directory: workspace/main
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        echo "添加檔案到 Git..."
        git add -f version.json
        git add -f conf/
        git add -f kcptube/
        
        echo "檢查 Git 狀態..."
        git status
        
        echo "提交變更..."
        git commit -m "更新版本至 ${GITHUB_REF#refs/tags/v} 並同步檔案"
        
        echo "推送變更..."
        git push
